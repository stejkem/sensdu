buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.6"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        classpath "com.moowork.gradle:gradle-node-plugin:0.12"
        classpath "com.moowork.gradle:gradle-gulp-plugin:0.12"
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
//        classpath "org.liquibase:liquibase-gradle-plugin:1.2.1"
    }
}

apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
apply plugin: 'war'
apply plugin: 'maven'
//apply plugin: 'org.liquibase.gradle'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
/* downgrade Hibernate to 4.3 */
ext['hibernate.version'] = '${hibernate_entitymanager_version}'
defaultTasks 'bootRun'

bootRepackage {
    mainClass = 'com.sensdu.web.SensduApp'
}

springBoot {
    mainClass = 'com.sensdu.web.SensduApp'
    executable = true
}

bootRun {
    addResources = false
}

apply from: 'gradle/liquibase.gradle'

group = 'com.sensdu'
version = '1.0'

description = """"""

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

dependencies {

    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jackson_version}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
    compile("com.ryantenney.metrics:metrics-spring:${metrics_spring_version}") {
        exclude(module: 'metrics-core')
        exclude(module: 'metrics-healthchecks')
    }

    compile "org.hibernate:hibernate-core:${hibernate_entitymanager_version}"
    compile "javax.inject:javax.inject:${javax_inject_version}"
    compile "javax.transaction:javax.transaction-api"
    compile "org.hibernate:hibernate-envers"
    compile "org.hibernate:hibernate-validator"
    compile("org.liquibase:liquibase-core:${liquibase_core_version}") {
        exclude(module: 'jetty-servlet')
    }

    compile "com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}"
    compile "org.springframework.boot:spring-boot-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-loader-tools"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    compile ("org.springframework.boot:spring-boot-starter-web") {
//        exclude module: "spring-boot-starter-tomcat"
    }

//    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '7.0.54'
//    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: '7.0.54'
//    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-logging-juli', version: '7.0.54'
//    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '7.0.54'

    compile "org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}"

    compile "mysql:mysql-connector-java"

    compile 'org.jsoup:jsoup:1.9.2'

    compile "com.h2database:h2"
    compile "com.jayway.jsonpath:json-path"
    testCompile group: 'junit', name: 'junit', version: '4.12'

}


task stage {
    dependsOn clean, build, bootRepackage
}

task copyNodeModules(type: Copy) {
    from 'node_modules'
    into 'build/resources/main/static/node_modules'
}

assemble.dependsOn copyNodeModules


apply plugin: 'com.moowork.node'